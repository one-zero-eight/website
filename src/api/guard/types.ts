/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/google/service-account-email": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get Service Account Email
     * @description Get the service account email address.
     */
    get: operations["get_service_account_email_google_service_account_email_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/google/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Index
     * @description Admin interface for setting up Google Sheets integration.
     */
    get: operations["index_google__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/google/setup-spreadsheet": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Setup Spreadsheet
     * @description Setup InNoHassle Guard sheet with description and return join link.
     */
    post: operations["setup_spreadsheet_google_setup_spreadsheet_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/google/join-document": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Join Document Page
     * @description Frontend page for respondents to join the spreadsheet.
     */
    get: operations["join_document_page_google_join_document_get"];
    put?: never;
    /**
     * Join Document
     * @description Add user to the spreadsheet with specified role.
     */
    post: operations["join_document_google_join_document_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** JoinDocumentRequest */
    JoinDocumentRequest: {
      /** Gmail */
      gmail: string;
      /** Spreadsheet Id */
      spreadsheet_id: string;
    };
    /** ServiceAccountEmailResponse */
    ServiceAccountEmailResponse: {
      /** Email */
      email: string;
    };
    /** SetupSpreadsheetRequest */
    SetupSpreadsheetRequest: {
      /** Spreadsheet Id */
      spreadsheet_id: string;
      /**
       * Respondent Role
       * @enum {string}
       */
      respondent_role: SetupSpreadsheetRequestRespondent_role;
    };
    /** SetupSpreadsheetResponse */
    SetupSpreadsheetResponse: {
      /** Sheet Title */
      sheet_title: string;
      /** Spreadsheet Id */
      spreadsheet_id: string;
      /** Role Display */
      role_display: string;
      /** Join Link */
      join_link: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type SchemaHttpValidationError =
  components["schemas"]["HTTPValidationError"];
export type SchemaJoinDocumentRequest =
  components["schemas"]["JoinDocumentRequest"];
export type SchemaServiceAccountEmailResponse =
  components["schemas"]["ServiceAccountEmailResponse"];
export type SchemaSetupSpreadsheetRequest =
  components["schemas"]["SetupSpreadsheetRequest"];
export type SchemaSetupSpreadsheetResponse =
  components["schemas"]["SetupSpreadsheetResponse"];
export type SchemaValidationError = components["schemas"]["ValidationError"];
export type $defs = Record<string, never>;
export interface operations {
  get_service_account_email_google_service_account_email_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ServiceAccountEmailResponse"];
        };
      };
      /** @description Service account not configured: {e} */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  index_google__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "text/html": string;
        };
      };
    };
  };
  setup_spreadsheet_google_setup_spreadsheet_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetupSpreadsheetRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SetupSpreadsheetResponse"];
        };
      };
      /** @description No credentials provided OR Invalid token */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Service account {service_email()} does not have access to this spreadsheet. Please add the service account as an editor to the spreadsheet first. */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  join_document_page_google_join_document_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "text/html": string;
        };
      };
    };
  };
  join_document_google_join_document_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["JoinDocumentRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description No credentials provided OR Invalid token */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Permission denied. Make sure the service account has access to the spreadsheet. */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Spreadsheet not found. */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
export enum SetupSpreadsheetRequestRespondent_role {
  writer = "writer",
  reader = "reader",
}
