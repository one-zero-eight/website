/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/rooms/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Rooms */
    get: operations["rooms_rooms"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/room/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Room Route */
    get: operations["rooms_room_route"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/room/{id}/bookings": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Room Bookings Route */
    get: operations["rooms_room_bookings_route"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/bookings/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Bookings */
    get: operations["bookings_bookings"];
    put?: never;
    /** Create Booking */
    post: operations["bookings_create_booking"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/bookings/my": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** My Bookings */
    get: operations["bookings_my_bookings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/bookings/{booking_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Booking */
    delete: operations["bookings_delete_booking"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** Booking */
    Booking: {
      /** Room Id */
      room_id: string;
      /** Title */
      title: string;
      /**
       * Start
       * Format: date-time
       */
      start: string;
      /**
       * End
       * Format: date-time
       */
      end: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** MyUniBooking */
    MyUniBooking: {
      /** Id */
      id: number;
      /** Room Id */
      room_id: string;
      /** Title */
      title: string;
      /**
       * Start
       * Format: date-time
       */
      start: string;
      /**
       * End
       * Format: date-time
       */
      end: string;
    };
    /**
     * Room
     * @description Room description.
     */
    Room: {
      /**
       * Id
       * @description Room slug
       */
      id: string;
      /**
       * Title
       * @description Room title
       */
      title: string;
      /**
       * Short Name
       * @description Shorter version of room title
       */
      short_name: string;
      /**
       * My Uni Id
       * @description ID of room on My University portal
       */
      my_uni_id: number;
      /**
       * Capacity
       * @description Room capacity, amount of people
       */
      capacity?: number | null;
      /**
       * Access Level
       * @description Access level to the room. Yellow = for students. Red = for employees. Special = special rules apply.
       */
      access_level?: RoomAccess_level | null;
      /**
       * Restrict Daytime
       * @description Prohibit to book during working hours. True = this room is available only at night 19:00-8:00, or full day on weekends.
       * @default false
       */
      restrict_daytime: boolean;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type SchemaBooking = components["schemas"]["Booking"];
export type SchemaHttpValidationError =
  components["schemas"]["HTTPValidationError"];
export type SchemaMyUniBooking = components["schemas"]["MyUniBooking"];
export type SchemaRoom = components["schemas"]["Room"];
export type SchemaValidationError = components["schemas"]["ValidationError"];
export type $defs = Record<string, never>;
export interface operations {
  rooms_rooms: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Room"][];
        };
      };
    };
  };
  rooms_room_route: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Room info */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Room"];
        };
      };
      /** @description Room not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  rooms_room_bookings_route: {
    parameters: {
      query: {
        start: string;
        end: string;
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Room bookings */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Booking"][];
        };
      };
      /** @description Room not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  bookings_bookings: {
    parameters: {
      query: {
        start: string;
        end: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Booking"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  bookings_create_booking: {
    parameters: {
      query: {
        room_id: string;
        title: string;
        start: string;
        end: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  bookings_my_bookings: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MyUniBooking"][];
        };
      };
    };
  };
  bookings_delete_booking: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        booking_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
export enum RoomAccess_level {
  yellow = "yellow",
  red = "red",
  special = "special",
}
