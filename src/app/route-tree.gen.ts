/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as WithmenuRouteImport } from "./routes/_with_menu/route";
import { Route as IndexImport } from "./routes/index";
import { Route as WithmenuSportImport } from "./routes/_with_menu/sport";
import { Route as WithmenuSearchImport } from "./routes/_with_menu/search";
import { Route as WithmenuScholarshipImport } from "./routes/_with_menu/scholarship";
import { Route as WithmenuRoomsImport } from "./routes/_with_menu/rooms";
import { Route as WithmenuMusicRoomImport } from "./routes/_with_menu/music-room";
import { Route as WithmenuExtensionImport } from "./routes/_with_menu/extension";
import { Route as WithmenuDashboardImport } from "./routes/_with_menu/dashboard";
import { Route as WithmenuAccountRouteImport } from "./routes/_with_menu/account/route";
import { Route as WithmenuScheduleIndexImport } from "./routes/_with_menu/schedule/index";
import { Route as WithmenuAccountIndexImport } from "./routes/_with_menu/account/index";
import { Route as WithmenuScheduleCategoryImport } from "./routes/_with_menu/schedule/$category";
import { Route as WithmenuAccountConnectTelegramImport } from "./routes/_with_menu/account/connect-telegram";
import { Route as WithmenuScheduleEventGroupsAliasImport } from "./routes/_with_menu/schedule/event-groups.$alias";

// Create/Update Routes

const WithmenuRouteRoute = WithmenuRouteImport.update({
  id: "/_with_menu",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const WithmenuSportRoute = WithmenuSportImport.update({
  path: "/sport",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuSearchRoute = WithmenuSearchImport.update({
  path: "/search",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuScholarshipRoute = WithmenuScholarshipImport.update({
  path: "/scholarship",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuRoomsRoute = WithmenuRoomsImport.update({
  path: "/rooms",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuMusicRoomRoute = WithmenuMusicRoomImport.update({
  path: "/music-room",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuExtensionRoute = WithmenuExtensionImport.update({
  path: "/extension",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuDashboardRoute = WithmenuDashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuAccountRouteRoute = WithmenuAccountRouteImport.update({
  path: "/account",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuScheduleIndexRoute = WithmenuScheduleIndexImport.update({
  path: "/schedule/",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuAccountIndexRoute = WithmenuAccountIndexImport.update({
  path: "/",
  getParentRoute: () => WithmenuAccountRouteRoute,
} as any);

const WithmenuScheduleCategoryRoute = WithmenuScheduleCategoryImport.update({
  path: "/schedule/$category",
  getParentRoute: () => WithmenuRouteRoute,
} as any);

const WithmenuAccountConnectTelegramRoute =
  WithmenuAccountConnectTelegramImport.update({
    path: "/connect-telegram",
    getParentRoute: () => WithmenuAccountRouteRoute,
  } as any);

const WithmenuScheduleEventGroupsAliasRoute =
  WithmenuScheduleEventGroupsAliasImport.update({
    path: "/schedule/event-groups/$alias",
    getParentRoute: () => WithmenuRouteRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_with_menu": {
      id: "/_with_menu";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof WithmenuRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_with_menu/account": {
      id: "/_with_menu/account";
      path: "/account";
      fullPath: "/account";
      preLoaderRoute: typeof WithmenuAccountRouteImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/dashboard": {
      id: "/_with_menu/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof WithmenuDashboardImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/extension": {
      id: "/_with_menu/extension";
      path: "/extension";
      fullPath: "/extension";
      preLoaderRoute: typeof WithmenuExtensionImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/music-room": {
      id: "/_with_menu/music-room";
      path: "/music-room";
      fullPath: "/music-room";
      preLoaderRoute: typeof WithmenuMusicRoomImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/rooms": {
      id: "/_with_menu/rooms";
      path: "/rooms";
      fullPath: "/rooms";
      preLoaderRoute: typeof WithmenuRoomsImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/scholarship": {
      id: "/_with_menu/scholarship";
      path: "/scholarship";
      fullPath: "/scholarship";
      preLoaderRoute: typeof WithmenuScholarshipImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/search": {
      id: "/_with_menu/search";
      path: "/search";
      fullPath: "/search";
      preLoaderRoute: typeof WithmenuSearchImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/sport": {
      id: "/_with_menu/sport";
      path: "/sport";
      fullPath: "/sport";
      preLoaderRoute: typeof WithmenuSportImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/account/connect-telegram": {
      id: "/_with_menu/account/connect-telegram";
      path: "/connect-telegram";
      fullPath: "/account/connect-telegram";
      preLoaderRoute: typeof WithmenuAccountConnectTelegramImport;
      parentRoute: typeof WithmenuAccountRouteImport;
    };
    "/_with_menu/schedule/$category": {
      id: "/_with_menu/schedule/$category";
      path: "/schedule/$category";
      fullPath: "/schedule/$category";
      preLoaderRoute: typeof WithmenuScheduleCategoryImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/account/": {
      id: "/_with_menu/account/";
      path: "/";
      fullPath: "/account/";
      preLoaderRoute: typeof WithmenuAccountIndexImport;
      parentRoute: typeof WithmenuAccountRouteImport;
    };
    "/_with_menu/schedule/": {
      id: "/_with_menu/schedule/";
      path: "/schedule";
      fullPath: "/schedule";
      preLoaderRoute: typeof WithmenuScheduleIndexImport;
      parentRoute: typeof WithmenuRouteImport;
    };
    "/_with_menu/schedule/event-groups/$alias": {
      id: "/_with_menu/schedule/event-groups/$alias";
      path: "/schedule/event-groups/$alias";
      fullPath: "/schedule/event-groups/$alias";
      preLoaderRoute: typeof WithmenuScheduleEventGroupsAliasImport;
      parentRoute: typeof WithmenuRouteImport;
    };
  }
}

// Create and export the route tree

interface WithmenuAccountRouteRouteChildren {
  WithmenuAccountConnectTelegramRoute: typeof WithmenuAccountConnectTelegramRoute;
  WithmenuAccountIndexRoute: typeof WithmenuAccountIndexRoute;
}

const WithmenuAccountRouteRouteChildren: WithmenuAccountRouteRouteChildren = {
  WithmenuAccountConnectTelegramRoute: WithmenuAccountConnectTelegramRoute,
  WithmenuAccountIndexRoute: WithmenuAccountIndexRoute,
};

const WithmenuAccountRouteRouteWithChildren =
  WithmenuAccountRouteRoute._addFileChildren(WithmenuAccountRouteRouteChildren);

interface WithmenuRouteRouteChildren {
  WithmenuAccountRouteRoute: typeof WithmenuAccountRouteRouteWithChildren;
  WithmenuDashboardRoute: typeof WithmenuDashboardRoute;
  WithmenuExtensionRoute: typeof WithmenuExtensionRoute;
  WithmenuMusicRoomRoute: typeof WithmenuMusicRoomRoute;
  WithmenuRoomsRoute: typeof WithmenuRoomsRoute;
  WithmenuScholarshipRoute: typeof WithmenuScholarshipRoute;
  WithmenuSearchRoute: typeof WithmenuSearchRoute;
  WithmenuSportRoute: typeof WithmenuSportRoute;
  WithmenuScheduleCategoryRoute: typeof WithmenuScheduleCategoryRoute;
  WithmenuScheduleIndexRoute: typeof WithmenuScheduleIndexRoute;
  WithmenuScheduleEventGroupsAliasRoute: typeof WithmenuScheduleEventGroupsAliasRoute;
}

const WithmenuRouteRouteChildren: WithmenuRouteRouteChildren = {
  WithmenuAccountRouteRoute: WithmenuAccountRouteRouteWithChildren,
  WithmenuDashboardRoute: WithmenuDashboardRoute,
  WithmenuExtensionRoute: WithmenuExtensionRoute,
  WithmenuMusicRoomRoute: WithmenuMusicRoomRoute,
  WithmenuRoomsRoute: WithmenuRoomsRoute,
  WithmenuScholarshipRoute: WithmenuScholarshipRoute,
  WithmenuSearchRoute: WithmenuSearchRoute,
  WithmenuSportRoute: WithmenuSportRoute,
  WithmenuScheduleCategoryRoute: WithmenuScheduleCategoryRoute,
  WithmenuScheduleIndexRoute: WithmenuScheduleIndexRoute,
  WithmenuScheduleEventGroupsAliasRoute: WithmenuScheduleEventGroupsAliasRoute,
};

const WithmenuRouteRouteWithChildren = WithmenuRouteRoute._addFileChildren(
  WithmenuRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof WithmenuRouteRouteWithChildren;
  "/account": typeof WithmenuAccountRouteRouteWithChildren;
  "/dashboard": typeof WithmenuDashboardRoute;
  "/extension": typeof WithmenuExtensionRoute;
  "/music-room": typeof WithmenuMusicRoomRoute;
  "/rooms": typeof WithmenuRoomsRoute;
  "/scholarship": typeof WithmenuScholarshipRoute;
  "/search": typeof WithmenuSearchRoute;
  "/sport": typeof WithmenuSportRoute;
  "/account/connect-telegram": typeof WithmenuAccountConnectTelegramRoute;
  "/schedule/$category": typeof WithmenuScheduleCategoryRoute;
  "/account/": typeof WithmenuAccountIndexRoute;
  "/schedule": typeof WithmenuScheduleIndexRoute;
  "/schedule/event-groups/$alias": typeof WithmenuScheduleEventGroupsAliasRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof WithmenuRouteRouteWithChildren;
  "/dashboard": typeof WithmenuDashboardRoute;
  "/extension": typeof WithmenuExtensionRoute;
  "/music-room": typeof WithmenuMusicRoomRoute;
  "/rooms": typeof WithmenuRoomsRoute;
  "/scholarship": typeof WithmenuScholarshipRoute;
  "/search": typeof WithmenuSearchRoute;
  "/sport": typeof WithmenuSportRoute;
  "/account/connect-telegram": typeof WithmenuAccountConnectTelegramRoute;
  "/schedule/$category": typeof WithmenuScheduleCategoryRoute;
  "/account": typeof WithmenuAccountIndexRoute;
  "/schedule": typeof WithmenuScheduleIndexRoute;
  "/schedule/event-groups/$alias": typeof WithmenuScheduleEventGroupsAliasRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_with_menu": typeof WithmenuRouteRouteWithChildren;
  "/_with_menu/account": typeof WithmenuAccountRouteRouteWithChildren;
  "/_with_menu/dashboard": typeof WithmenuDashboardRoute;
  "/_with_menu/extension": typeof WithmenuExtensionRoute;
  "/_with_menu/music-room": typeof WithmenuMusicRoomRoute;
  "/_with_menu/rooms": typeof WithmenuRoomsRoute;
  "/_with_menu/scholarship": typeof WithmenuScholarshipRoute;
  "/_with_menu/search": typeof WithmenuSearchRoute;
  "/_with_menu/sport": typeof WithmenuSportRoute;
  "/_with_menu/account/connect-telegram": typeof WithmenuAccountConnectTelegramRoute;
  "/_with_menu/schedule/$category": typeof WithmenuScheduleCategoryRoute;
  "/_with_menu/account/": typeof WithmenuAccountIndexRoute;
  "/_with_menu/schedule/": typeof WithmenuScheduleIndexRoute;
  "/_with_menu/schedule/event-groups/$alias": typeof WithmenuScheduleEventGroupsAliasRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/account"
    | "/dashboard"
    | "/extension"
    | "/music-room"
    | "/rooms"
    | "/scholarship"
    | "/search"
    | "/sport"
    | "/account/connect-telegram"
    | "/schedule/$category"
    | "/account/"
    | "/schedule"
    | "/schedule/event-groups/$alias";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/dashboard"
    | "/extension"
    | "/music-room"
    | "/rooms"
    | "/scholarship"
    | "/search"
    | "/sport"
    | "/account/connect-telegram"
    | "/schedule/$category"
    | "/account"
    | "/schedule"
    | "/schedule/event-groups/$alias";
  id:
    | "__root__"
    | "/"
    | "/_with_menu"
    | "/_with_menu/account"
    | "/_with_menu/dashboard"
    | "/_with_menu/extension"
    | "/_with_menu/music-room"
    | "/_with_menu/rooms"
    | "/_with_menu/scholarship"
    | "/_with_menu/search"
    | "/_with_menu/sport"
    | "/_with_menu/account/connect-telegram"
    | "/_with_menu/schedule/$category"
    | "/_with_menu/account/"
    | "/_with_menu/schedule/"
    | "/_with_menu/schedule/event-groups/$alias";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  WithmenuRouteRoute: typeof WithmenuRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WithmenuRouteRoute: WithmenuRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_with_menu"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_with_menu": {
      "filePath": "_with_menu/route.tsx",
      "children": [
        "/_with_menu/account",
        "/_with_menu/dashboard",
        "/_with_menu/extension",
        "/_with_menu/music-room",
        "/_with_menu/rooms",
        "/_with_menu/scholarship",
        "/_with_menu/search",
        "/_with_menu/sport",
        "/_with_menu/schedule/$category",
        "/_with_menu/schedule/",
        "/_with_menu/schedule/event-groups/$alias"
      ]
    },
    "/_with_menu/account": {
      "filePath": "_with_menu/account/route.tsx",
      "parent": "/_with_menu",
      "children": [
        "/_with_menu/account/connect-telegram",
        "/_with_menu/account/"
      ]
    },
    "/_with_menu/dashboard": {
      "filePath": "_with_menu/dashboard.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/extension": {
      "filePath": "_with_menu/extension.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/music-room": {
      "filePath": "_with_menu/music-room.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/rooms": {
      "filePath": "_with_menu/rooms.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/scholarship": {
      "filePath": "_with_menu/scholarship.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/search": {
      "filePath": "_with_menu/search.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/sport": {
      "filePath": "_with_menu/sport.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/account/connect-telegram": {
      "filePath": "_with_menu/account/connect-telegram.tsx",
      "parent": "/_with_menu/account"
    },
    "/_with_menu/schedule/$category": {
      "filePath": "_with_menu/schedule/$category.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/account/": {
      "filePath": "_with_menu/account/index.tsx",
      "parent": "/_with_menu/account"
    },
    "/_with_menu/schedule/": {
      "filePath": "_with_menu/schedule/index.tsx",
      "parent": "/_with_menu"
    },
    "/_with_menu/schedule/event-groups/$alias": {
      "filePath": "_with_menu/schedule/event-groups.$alias.tsx",
      "parent": "/_with_menu"
    }
  }
}
ROUTE_MANIFEST_END */
