// vite.config.ts
import mdx from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/@mdx-js+rollup@3.0.1_rollup@4.22.4/node_modules/@mdx-js/rollup/index.js";
import { TanStackRouterVite } from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/@tanstack+router-plugin@1.58.4_vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0_/node_modules/@tanstack/router-plugin/dist/esm/vite.js";
import remarkGfm from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/remark-gfm@4.0.0/node_modules/remark-gfm/index.js";
import veauryVitePlugins from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/veaury@2.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/veaury/vite/esm/index.mjs";
import { defineConfig } from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0/node_modules/vite/dist/node/index.js";
import { ViteMinifyPlugin } from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/vite-plugin-minify@2.0.0_vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0_/node_modules/vite-plugin-minify/dist/index.cjs";
import mkcert from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/vite-plugin-mkcert@1.17.6_vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0_/node_modules/vite-plugin-mkcert/dist/mkcert.mjs";
import { VitePWA } from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/vite-plugin-pwa@0.20.5_vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0__wor_otts45jgufiqex5d77uuhjhbzi/node_modules/vite-plugin-pwa/dist/index.js";
import tsconfigPaths from "file:///C:/Users/Aliya/OneDrive/%D0%A0%D0%B0%D0%B1%D0%BE%D1%87%D0%B8%D0%B9%20%D1%81%D1%82%D0%BE%D0%BB/%D0%98%D0%BD%D0%BD%D0%BE%D0%BF%D0%BE%D0%BB%D0%B8%D1%81/summer/website/node_modules/.pnpm/vite-tsconfig-paths@5.0.1_typescript@5.6.2_vite@5.4.7_@types+node@20.16.5_sass-embedded@1.79.4_terser@5.31.0_/node_modules/vite-tsconfig-paths/dist/index.js";

// package.json
var version = "1.7.0";

// vite.config.ts
var vite_config_default = defineConfig({
  plugins: [
    // HTTPS support in development
    mkcert({
      hosts: ["local.innohassle.ru"],
    }),
    // Enable routing via TanStack Router
    TanStackRouterVite({
      routesDirectory: "src/app/routes",
      generatedRouteTree: "src/app/route-tree.gen.ts",
      quoteStyle: "double",
      semicolons: true,
    }),
    // Support for React and Vue in one project
    veauryVitePlugins({
      type: "react",
      // Configuration of @vitejs/plugin-react
      // reactOptions: {...},
      // Configuration of @vitejs/plugin-vue
      // vueOptions: {...},
      // Configuration of @vitejs/plugin-vue-jsx
      // vueJsxOptions: {...}
    }),
    // MDX support
    mdx({
      remarkPlugins: [remarkGfm],
    }),
    // Resolve paths from tsconfig.json
    tsconfigPaths(),
    // Offline mode via PWA
    VitePWA({
      registerType: "autoUpdate",
      workbox: {
        clientsClaim: true,
        skipWaiting: true,
        globPatterns: ["**/*.{js,css,html,json,svg,png,woff2}"],
      },
      manifest: false,
      // Manifest is already in public/manifest.json
    }),
    // Minify the index.html
    ViteMinifyPlugin({}),
  ],
  css: {
    preprocessorOptions: {
      scss: {
        api: "modern-compiler",
      },
    },
  },
  define: {
    // Inject the app version variable
    __VERSION__: JSON.stringify(version),
  },
});
export { vite_config_default as default };
//# sourceMappingURL=data:application/json;base64,
